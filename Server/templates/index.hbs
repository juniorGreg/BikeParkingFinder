<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
        <title>Bike Parking Montreal</title>
        <link rel="stylesheet" href="resources/leaflet.css" />
        <script src="resources/leaflet.js"></script>
        <link rel="stylesheet" href="resources/bootstrap-3.3.5-dist/css/bootstrap.min.css">
        <script src="resources/jquery-2.1.4.min.js"></script>
        <script src="resources/bootstrap-3.3.5-dist/js/bootstrap.min.js"></script>
        <link rel="stylesheet" href="resources/style.css">
        <script src="resources/map_icons.js"></script>
        <script src="resources/js.cookie.js"></script>
        <link href="resources/toastr.min.css" rel="stylesheet"/>
        <script src="resources/toastr.min.js"></script>
        <link rel="icon" href="resources/images/bike_icon.png">

        <link href="resources/visualCaptcha-frontend-jquery/visualcaptcha.css" media="all" rel="stylesheet">
        <script src="resources/visualCaptcha-frontend-jquery/visualcaptcha.jquery.js"></script>

        <script>

			toastr.options = {
			  "closeButton": false,
			  "debug": false,
			  "newestOnTop": false,
			  "progressBar": false,
			  "positionClass": "toast-bottom-center",
			  "preventDuplicates": false,
			  "onclick": null,
			  "showDuration": "300",
			  "hideDuration": "1000",
			  "timeOut": "5000",
			  "extendedTimeOut": "1000",
			  "showEasing": "swing",
			  "hideEasing": "linear",
			  "showMethod": "fadeIn",
			  "hideMethod": "fadeOut"
			}

			function showError(error)
			{

				if(error == "accuracy_to_low")
					toastr["warning"]("Your location accuracy is too low.");
				else if(error=="already_count")
					toastr["warning"]( "This parking already has been added." );
				else if(error=="too_many_parking_range")
					toastr["warning"]( "There are others parking in your location range." );
				else if(error == "already_remove")
					toastr["warning"]( "A modifying request already has been triggered." );
				else if(error == "already_confirm")
					toastr["warning"]( "A modifying request already has been triggered." );
				else
					toastr["warning"](error);
			}

    $("document").ready(function(){


				var captcha = $( '#sample-captcha' ).visualCaptcha({
				imgPath: 'resources/visualCaptcha-frontend-jquery/img/',

				captcha: {
					numberOfImages: 5,
					routes:{
						start: '/bike_parking/visualcaptcha/start',
						image: '/bike_parking/visualcaptcha/image',
						audio: '/bike_parking/visualcaptcha/audio',
					},
						callbacks: {
							loading: function( captcha ){
							console.log( 'I am loading.', captcha );
						},
						loaded: function( captcha ){
							console.log( 'I am loaded.', captcha );
						},
					}
				}
			}); //End captcha

        var currentPosition = [45.5077, -73.544];
        var accuracy = 500.0;
				var markers = new L.FeatureGroup();

				var locale = Cookies.get('locale');
				if(locale == undefined)
					locale = "fr";

				$("#"+locale).addClass("glyphicon glyphicon-ok");

				var updateMapPosition = function(e) {
					var position = {'coords': {'latitude': e.latlng.lat,
									  'longitude': e.latlng.lng,
									  'accuracy': 1000.0}};
						markers.clearLayers();
						showPosition(position);
					} // End updateMapPosition

          function showPosition(position)
          {

              if(position)
              {
                  currentPosition = [position.coords.latitude, position.coords.longitude];
                  accuracy = position.coords.accuracy/2;
		          }
              mymap.setView(currentPosition, 17)
              var marker = L.marker(currentPosition, {icon: bikeIcon}).addTo(mymap)
                  .bindPopup('"Your position"<br>"Gps accuracy":'+accuracy).openPopup();

              markers.addLayer(marker);

              var circle = L.circle(currentPosition, 350, {
                  color: 'blue',
                  fillColor: '#03f',
                  fillOpacity: 0.20
              }).addTo(mymap);

              circle.on('dblclick', updateMapPosition);

    					markers.addLayer(circle);

    					if(accuracy > 0.0)
    					{
    						var circleAcc = L.circle(currentPosition, accuracy, {
    							color: 'green',
    							fillColor: '#0f0s',
    							fillOpacity: 0.35
    						}).addTo(mymap);

    						 circleAcc.on('dblclick',updateMapPosition);

    						markers.addLayer(circleAcc);
    					}


              $.getJSON( "/bike_parking/geolocation?coord=["+currentPosition[1]+","+currentPosition[0]+"]", function( positions ) {

        					  $.each(positions, function( index, value ) {
        						  var status = value["status"];
        						  var status_marker;
        						  var status_text = "Confirmed"
                      var location = [value["location"][1], value["location"][0]];

        						  if(status < 10)
        						  {
        							 status_marker = L.marker(location, {icon: unconfirmIcon });
        							 var status_text = "Unconfirmed"
        						  }
        						  else
        						      status_marker = L.marker(location);

        						  var marker = status_marker.addTo(mymap)
        						   .bindPopup( '"Bike Parking"<br>Status: '+status_text+'<br><button class="btn btn-default btn-sm modifyBikeParking"  id="'+value["id"]+'">"Modify this parking"</button>');
        							markers.addLayer(marker);

        							$(document).on("click", "#"+value["id"], function(){
        								var id = $(this).attr('id');
        								$("#id").val(id);
        								$('#modifyBikeParkingModal').modal('show');
        							});

        						});

        				}); // End get json geolocation
          } // End show position

          function getLocation() {

              if (navigator.geolocation) {

                 navigator.geolocation.getCurrentPosition(showPosition, function(error) {
                      alert('position not available for the moment.');
                      showPosition();
                  },{timeout:5000});
              } else {
                  alert("Geolocation is not supported by this browser.");

              }
          } //End getlocation

          var mymap = L.map('mapid').setView(currentPosition, 15);
          L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
              attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
          }).addTo(mymap);

				mymap.addLayer(markers);
        getLocation();


        mymap.on('click', updateMapPosition);

				$("#showall").click(function(){
					$.getJSON( "/bike_parking/all_locations", function( positions ) {

					  $.each(positions, function( index, value ) {
						  var marker = L.marker(value["location"]).addTo(mymap)
						   .bindPopup('Bike Parking');
							markers.addLayer(marker);
					   });
          });
				}); //End #showAll

				$("#addNew").click(function(){

					var capacity = $("#capacity").val();


					var captcha_data = captcha.data( 'captcha' ).getCaptchaData();
					formData = "coord="+currentPosition+"&radius="+accuracy+"&capacity="+capacity+"&"+captcha_data.name+"="+captcha_data.value;

					$.post("/bike_parking/add_bike_parking", formData).done(
						function(data){
							var obj = jQuery.parseJSON(data);

							if(obj.error)
								showError(obj.error);
							else
								toastr["success"]("Parking Added");

						}
					);

					 $('#addBikeParkingModal').modal('hide');
				}); //End adNew

				$("#removeIt").click(function(){

					var id = $("#id").val();
					formData = "id="+id;

					$.post("/bike_parking/remove_bike_parking", formData).done(
						function(data){
							var obj = jQuery.parseJSON(data);
							if(obj.error)
								showError(obj.error);
							else
								toastr["success"]("Parking Modified");


						}
					);

					 $('#modifyBikeParkingModal').modal('hide');
				}); //End #removeIt

				$("#confirmIt").click(function(){

					var id = $("#id").val();
					formData = "id="+id;

					$.post("/bike_parking/confirm_bike_parking", formData).done(
						function(data){
							var obj = jQuery.parseJSON(data);
							if(obj.error)
								showError(obj.error);
							else
								toastr["success"]( "Parking Modified" );

						}
					);

					 $('#modifyBikeParkingModal').modal('hide');
				}); //End #confirmIt


        //Prevent default submit action
				$("form").on("submit", function (e) {
    				e.preventDefault();
    				});
        });

        </script>

    </head>
    <body>
         <nav class="navbar navbar-inverse">
          <div class="container-fluid">

            <div class="navbar-header">
				<button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
				<span class="icon-bar"></span>
				<span class="icon-bar"></span>
				<span class="icon-bar"></span>
			  </button>

              <a class="navbar-brand" href="#"> <img src="resources/images/bike_icon.png" width="24px" style="float: left; padding-right: 5px;"/>BikeParkingMontreal v{{version}}</a>
            </div>

            <div class="collapse navbar-collapse" id="myNavbar">
				 <ul class="nav navbar-nav">
				  <li class="dropdown">
					  <a class="dropdown-toggle" data-toggle="dropdown" href="#">Actions<span class="caret"></span> </a>
					  <ul class="dropdown-menu">
						  <li><a href="#" id="showall">"Show all parking"</a></li>
						  <li><a href="#" data-toggle="modal" data-target="#addBikeParkingModal" >"Add new parking"</a></li>
					  </ul>
				  </li>
				</ul>

				<ul class="nav navbar-nav navbar-right">
				  <li class="dropdown">
					  <a class="dropdown-toggle" data-toggle="dropdown" href="#"><span class="glyphicon glyphicon-leaf"></span> Languages
					  <span class="caret"></span> </a>
					  <ul class="dropdown-menu">
						  <li><a href="/locale/en"><span id="en"></span> English</a></li>
						  <li><a href="/locale/fr"><span id="fr"></span> Français</a></li>
					  </ul>
				  </li>
				</ul>
			</div>
          </div>
        </nav>

        <div class="container">
          <div id="mapid"></div>
        </div>

        <!--Add Bike Parking Modal -->
		<div id="addBikeParkingModal" class="modal fade" role="dialog">
		  <div class="modal-dialog">

			<!-- Modal content-->
			<div class="modal-content">
			  <div class="modal-header">
				<button type="button" class="close" data-dismiss="modal">&times;</button>
				<h4 class="modal-title">"Add new bike parking"</h4>
			  </div>
			  <div class="modal-body">
				<form role="form">
					<div class="form-group">
					<label for="capacity">"Capacity:" </label>
					<input type="number" class="form-control" id="capacity" min="1" value="1">
				  </div>
				   <div id="status-message"></div>
				   <div id="sample-captcha"></div>
				  <button type="submit" class="btn btn-default" id="addNew"> "Add" </button>
				</form>
			  </div>
			  <div class="modal-footer">
				<button type="button" class="btn btn-default" data-dismiss="modal"> "Close" </button>
			  </div>
			</div>

		  </div>
		</div>

        <!--Modify Bike Parking Modal -->
		<div id="modifyBikeParkingModal" class="modal fade" role="dialog">
		  <div class="modal-dialog">

			<!-- Modal content-->
			<div class="modal-content">
			  <div class="modal-header">
				<button type="button" class="close" data-dismiss="modal">&times;</button>
				<h4 class="modal-title"> "Modify bike parking" </h4>
			  </div>
			  <div class="modal-body">
				<form role="form">
				  <input type="hidden" value="" id="id">
				  <button class="btn btn-default" id="removeIt"> "Remove it" </button>
				  <button class="btn btn-default" id="confirmIt"> "Confirm it" </button>
				</form>
			  </div>
			  <div class="modal-footer">
				<button type="button" class="btn btn-default" data-dismiss="modal"> "Close" </button>
			  </div>
			</div>

		  </div>
		</div>

    </body>
</html>
